{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchName/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","id","headings","width","style","onClick","handleSort","SearchName","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","toLowerCase","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.3f297914.chunk.js","sourcesContent":["import React from \"react\";\r\nconst DataAreaContext = React.createContext({\r\n\r\n});\r\n\r\nexport default DataAreaContext;","import React, { useContext } from \"react\";\r\nimport \"./DataBody.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\n\r\nconst DataBody = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    function formatDate(date){\r\n        const dateArray = date.split(\"-\");\r\n        const year = dateArray[0];\r\n        const month = dateArray[1];\r\n        const dayArray = dateArray[2].split(\"T\");\r\n        const day = dayArray[0];\r\n        const formattedDate =[month, day, year].join(\"-\");\r\n        return formattedDate;\r\n    }\r\n\r\n    return(\r\n        <tbody>\r\n            {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n            context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n                return (\r\n                    <tr key={login.uuid}>\r\n                        <td data-th=\"Image\" className=\"align-middle\">\r\n                            <img\r\n                                src={picture.medium}\r\n                                alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                                className=\"img-responsive\"\r\n                            />\r\n                        </td>\r\n                        <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n                            {name.first} {name.last}\r\n                        </td>\r\n                        <td data-th=\"Phone\" className=\"align-middle\">\r\n                            {phone}\r\n                        </td>\r\n                        <td data-th=\"Email\" className=\"align-middle\">\r\n                            <a href={\"mailto:\" + email} target=\"__blank\">\r\n                                {email}\r\n                            </a>\r\n                        </td>\r\n                        <td data-th=\"DOB\" className=\"align-middle\">\r\n                            {formatDate(dob.date)}\r\n                        </td>\r\n                    </tr>\r\n                );\r\n            })\r\n            ) : (\r\n                <></>\r\n            )}\r\n\r\n        </tbody>\r\n    );\r\n}\r\nexport default DataBody;","import React, { useContext } from \"react\";\r\nimport DataBody from \"../DataBody\";\r\nimport \"./DataTable.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\nconst DataTable = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    return (\r\n\r\n        <div className=\"datatable mt-5\">\r\n            <table\r\n                id=\"table\"\r\n                className=\"table table-striped table-hover table-condensed\"\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        {context.developerState.headings.map(({ name, width }) => {\r\n                            return (\r\n                                <th\r\n                                    className=\"col\"\r\n                                    key={name}\r\n                                    style={{ width }}\r\n                                    onClick={() => {\r\n                                        context.handleSort(name);\r\n                                    }}\r\n                                >\r\n                                    {name}\r\n                                    <span className=\"pointer\"></span>\r\n                                </th>\r\n                            );\r\n                        })}\r\n                    </tr>\r\n                </thead>\r\n\r\n                <DataBody />\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DataTable;","import React, { useContext } from \"react\";\r\nimport \"./SearchName.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\n\r\nconst SearchName = () => {\r\n    const context = useContext(DataAreaContext);\r\n\r\n    return (\r\n        <div className=\"searchbox\">\r\n            <form className=\"form-inline\">\r\n                <input\r\n                    className=\"form-control mr-sm-2\"\r\n                    type=\"search\"\r\n                    placeholder=\"name\"\r\n                    aria-label=\"Search\"\r\n                    onChange={e => context.handleSearchChange(e)}\r\n                />\r\n                <button className=\"btn my-2 my-sm-0\" type=\"submit\">\r\n                    Search\r\n                </button>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\nexport default SearchName;","import React from \"react\";\r\nimport SearchName from \"../SearchName\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav() {\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"search-area col-4\">\r\n                <SearchName />\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\nexport default Nav;","import axios from \"axios\";\r\n\r\nexport default {\r\n  // Getting all user data from URL\r\n  getUsers: function() {\r\n    return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n  }\r\n};\r\n","import React, {useState, useEffect} from \"react\";\r\nimport DataTable from \"../DataTable\";\r\nimport Nav from \"../Nav\";\r\nimport API from \"../../utils/API\";\r\nimport \"./DataArea.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\"\r\n\r\nconst DataArea = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n    users: [],\r\n    order: \"descend\",\r\n    filteredUsers: [],\r\n    headings: [\r\n      { name: \"Image\", width: \"10%\", order: \"descend\" },\r\n      { name: \"name\", width: \"10%\", order: \"descend\" },\r\n      { name: \"phone\", width: \"20%\", order: \"descend\" },\r\n      { name: \"email\", width: \"20%\", order: \"descend\" },\r\n      { name: \"dob\", width: \"10%\", order: \"descend\" }\r\n    ]\r\n  });\r\n\r\n  const handleSort = heading => {\r\n    let currentOrder = developerState.headings\r\n      .filter(elem => elem.name === heading)\r\n      .map(elem => elem.order)\r\n      .toString();\r\n\r\n    if (currentOrder === \"descend\") {\r\n      currentOrder = \"ascend\";\r\n    } else {\r\n      currentOrder = \"descend\";\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (currentOrder === \"ascend\") {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else if (heading === \"dob\") {\r\n          return a[heading].age - b[heading].age;\r\n        } else {\r\n          return a[heading].localeCompare(b[heading]);\r\n        }\r\n      } else {\r\n        // account for missing values\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        }\r\n        // numerically\r\n        else if (heading === \"name\") {\r\n          return b[heading].first.localeCompare(a[heading].first);\r\n        }else if (heading === \"dob\") {\r\n          return b[heading].age - a[heading].age;\r\n        }  else {\r\n          return b[heading].localeCompare(a[heading]);\r\n        }\r\n      }\r\n    };\r\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n    const updatedHeadings = developerState.headings.map(elem => {\r\n      elem.order = elem.name === heading ? currentOrder : elem.order;\r\n      return elem;\r\n    });\r\n\r\n    setDeveloperState({\r\n      ...developerState,\r\n      filteredUsers: sortedUsers,\r\n      headings: updatedHeadings\r\n    });\r\n  };\r\n\r\n  const handleSearchChange = event => {\r\n    const filter = event.target.value;\r\n    const filteredList = developerState.users.filter(item => {\r\n      let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\r\n      console.log(filter, values)\r\n    if(values.indexOf(filter.toLowerCase()) !== -1){\r\n      return item\r\n    };\r\n    });\r\n\r\n    setDeveloperState({ ...developerState, filteredUsers: filteredList });\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n    API.getUsers().then(results => {\r\n      console.log(results.data.results);\r\n      setDeveloperState({\r\n        ...developerState,\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <DataAreaContext.Provider\r\n      value={{ developerState, handleSearchChange, handleSort }}\r\n    >\r\n      <Nav />\r\n      <div className=\"data-area\">\r\n        {developerState.filteredUsers.length > 0 ? <DataTable /> : <div></div>}\r\n      </div>\r\n    </DataAreaContext.Provider>\r\n  );\r\n};\r\n\r\nexport default DataArea;\r\n","import React from \"react\";\r\nimport DataArea from \"../DataArea\";\r\n\r\nfunction Main (){\r\n    return (\r\n        <>\r\n        <DataArea />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nfunction Wrapper({ children }) {\r\n    return(\r\n        <div className=\"wrapper\" >\r\n            { children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Employee Directory</h1>\r\n            <p>Click on each heading to filter or use the search box to narrow your results</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\nimport Main from \"./components/Main\";\nimport Wrapper from \"./components/Wrapper\";\nimport Header from \"./components/Header\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Wrapper>\n        <Header />\n        <Main />\n      </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}